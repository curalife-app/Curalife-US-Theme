

<section class="timeline">
<div class="container">
     <div class="break-it">Letâ€™s break it down:</div>

  <ul>
    <li>
      
     
    <div>
      <div class="time">Week 1</div>
      <img class="img-break" src="{{ 'thirty-day-break-1.png' | asset_url }}" width="831" height="513" alt="" loading="lazy">
      </div> 
          
    
    </li>
    <li>


    <div>
  <div class="time">Week 2</div>

      <img class="img-break" src="{{ 'thirty-day-break-2.png' | asset_url }}" width="831" height="546" alt="" loading="lazy">
      </div> 


    </li>

    <li>


       <div>
  <div class="time">Week 3</div>

       <img class="img-break" src="{{ 'thirty-day-break-3.png' | asset_url }}" width="1097" height="675" alt="" loading="lazy">
       </div> 


    </li>

    <li>


       <div>
        
        <div class="time">Week 4</div>

        <img src="{{ 'thirty-day-break-4.png' | asset_url }}" width="889" height="539" alt="" loading="lazy">
        </div> 
  
    </li>
    
  
  
  </ul>

  </div>
</section>

<style>

 .timeline {
    background: #555F44;
 }

 .timeline .break-it {
    display: flex;
    justify-content: center;
    text-align: center;
    font-family: 'PP Radio Grotesk';
    font-weight: 700;
    font-size: clamp(30px, 5vw, 60px);
    line-height: 35px;
    color: white;
    padding-bottom: 30px;
 }

 @-webkit-keyframes pulsate {
     0% {-webkit-transform: scale(0.1, 0.1); opacity: 0;left:-12px;}
     50% {opacity: 1;}
     100% {-webkit-transform: scale(1, 1); opacity: 1;left:-12px;}
 }

    .timeline ul li {
      list-style-type: none;
      position: relative;
      width: 6px;
      margin-left: 20%;
      padding-top: 50px;
      background: rgba(185, 200, 107, 0.5);
      
    }

    .timeline ul li::after {
      content: '';
      position: absolute;
      left: 50%;
      top: 0;
      transform: translateX(-50%);
      width: 30px;
      height: 30px;
      border-radius: 50%;
      background: inherit;
     
    }

    .timeline ul li div {
      position: relative;
      bottom: 0;
      padding: 15px;
      width: 700px;
      
    }

    .timeline ul li div::before {
      content: '';
      position: absolute;
      width: 0;
      height: 0;
    }


 

    .time {
      font-family: 'PP Radio Grotesk';
      font-weight: 700;
      font-size: clamp(35px, 2vw, 45px);
      line-height: 49px;
      letter-spacing: -0.01em;
      color: #B9C86B;
    }

    .img-break {
      padding-left: 10vw;
    }
 


    .timeline ul li::after {
      transition: background .5s ease-in-out;
    }

    .timeline ul li.in-view::after {
        background: #B9C86B;
        -webkit-animation: pulsate 1s ease-out;
        -webkit-animation-iteration-count: 2; 
        opacity: 1.0;
    }

    .timeline ul li div {
      visibility: hidden;
      opacity: 0;
      transition: all .5s ease-in-out;
    }

    .timeline ul li div {
      transform: translate3d(700px, 0, 0);
    }

  

    .timeline ul li.in-view div {
      transform: none;
      visibility: visible;
      opacity: 1;
    }



    @media screen and (max-width: 768px) {
      .timeline ul li {
        margin-left: 20px;
      }
      .timeline ul li div {
        width: calc(100vw - 91px);
        display:flex
        flex-direction: column;
        justify-content: flex-start;
      }
     
    }
    
    .time {
      line-height: 30px;
    }

    .img-break {
      padding-left: unset;
    }

</style>



<script>
    (function() {

      'use strict';

      // define variables
      var items = document.querySelectorAll(".timeline li");

      // check if an element is in viewport
      // http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport
      function isElementInViewport(el) {
        var rect = el.getBoundingClientRect();
        return (
          rect.top >= 0 &&
          rect.left >= 0 &&
          rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
          rect.right <= (window.innerWidth || document.documentElement.clientWidth)
        );
      }

      function callbackFunc() {
        for (var i = 0; i < items.length; i++) {
          if (isElementInViewport(items[i])) {
            items[i].classList.add("in-view");
          }
        }
      }

      // listen for events
      window.addEventListener("load", callbackFunc);
      window.addEventListener("resize", callbackFunc);
      window.addEventListener("scroll", callbackFunc);

    })();



</script>
{% capture CFH %}{{ content_for_header }}{% endcapture %}{{CFH}}

{% if CFH contains 'adminBarInjector' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled Cause User Is Admin.")</script>
{% elsif CFH contains 'admin-bar-iframe' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled Cause User Is Admin.")</script>
{% elsif CFH contains 'preview_bar_injector-' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled Cause User Is Admin.")</script>
{% elsif CFH contains "redirect=false" %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled Through URL Parameter.")</script>
{% elsif customer.email == "yotamon@curalife.com" %}
  {% assign admin = true %}
  <script>console.log("Redirect Cause User Is Yotam")</script>
{% endif %}

{%- comment -%} Temp: remove redirect for curaeats product page {%- endcomment -%}
{% if request.path contains 'products/curaeats' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled For CuraEats")</script>
{% endif %}

{% unless admin %}
  <script>
    const detectRobot = (userAgent) => {
      const robots = new RegExp([
        /bot/, /spider/, /crawl/,
        /APIs-Google/, /AdsBot/, /Googlebot/,
        /mediapartners/, /Google Favicon/,
        /FeedFetcher/, /Google-Read-Aloud/,
        /DuplexWeb-Google/, /googleweblight/,
        /bing/, /yandex/, /baidu/, /duckduck/, /yahoo/,
        /ecosia/, /ia_archiver/,
        /facebook/, /instagram/, /pinterest/, /reddit/,
        /slack/, /twitter/, /whatsapp/, /youtube/,
        /semrush/,
      ].map((r) => r.source).join("|"), "i");
      return robots.test(userAgent);
    };

    function redirectTo(url, slug) {
      if (slug) {
        window.location.hostname = url;
      }
      else {
        window.location.href = url;
      }
    }

    const userAgent = navigator.userAgent;
    const isRobot = detectRobot(userAgent);

    if (!isRobot) {
      console.log('REDIRECTING...');
      let req = new XMLHttpRequest;
      req.overrideMimeType("application/json"), req.open("GET", "https://geo.curalife.com/", !0), req.onload = function() {
        let country = JSON.parse(req.responseText).country;
        {%- comment -%} let host = location.hostname == "global.curalife.com" ? "Global" : "USA"; {%- endcomment -%}
        let countriesUS = ["US", "PR", "CA", "AU"]; // Countries for main domain (USA)
        sessionStorage.setItem('country', country);

        if (["LT", "LV"].includes(country)) {redirectTo("https://curalife.lv", false)} // If Lithuania Or Latvia
        else if (country == "AT") {redirectTo("https://curalife.at", false)} // If Austria
        else if (country == "KW") {redirectTo("https://trycuralife.com", false)} // If Kuwait
        {% if shop.name == "CuraLife" %}
          else if (!countriesUS.includes(country)) { // If host is US but not on US Countries
            redirectTo("global.curalife.com", true)
          }
        {% elsif shop.name == "CuraLife Global" %}
          else if (countriesUS.includes(country)) { // If Global and we are on US Countries so go US
            redirectTo("curalife.com", true);
          }
        {% endif %}

        {%- comment -%} TEMP: Old solution {%- endcomment -%}
        {%- comment -%}
        else if ((host == "USA") && (!countriesUS.includes(country))) { // If host is US but not on US Countries
          redirectTo("global.curalife.com", true)
        }
        else if ((host == "Global") && (countriesUS.includes(country))) { // If Global and we are on US Countries so go US
          redirectTo("curalife.com", true);
        }
        {%- endcomment -%}

      }, req.send(null);
    }
  </script>
{% endunless %}
<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Redirect By Global Or US -->
  <script src="{{ 'redirect-by-location.js' | asset_url }}" async></script>
    <title>Support Healthy Blood Sugar</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0">
    <meta name="format-detection" content="telephone=no">
    <meta name="format-detection" content="address=no">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;700&family=Rufina&family=Roboto+Slab:wght@400;700&family=Roboto:wght@400;500;700&family=Ovo&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=ABeeZee&family=Open+Sans+Condensed:ital,wght@0,300;0,700;1,300&display=swap" rel="stylesheet">
    
    <link rel="preload" as="font" href="{{ 'lab1w-Samantha-Regular.woff' | asset_url }}" type="font/woff" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script src="{{ 'libs.js' | asset_url }}"></script>

    <link rel="stylesheet" href="{{ 'aio-support-pack.css' | asset_url }}" type="text/css"/>
    <!-- <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous"> -->

    {% include 'meta-tags'%}

    <style>
      @font-face {
    font-family: 'Takota';
    src: url("../fonts/Takota/Takota.eot");
    src: local("Takota"), url("../fonts/Takota/Takota.eot?#iefix") format("embedded-opentype"), url("../fonts/Takota/Takota.woff2") format("woff2"), url("../fonts/Takota/Takota.woff") format("woff"), url("../fonts/Takota/Takota.ttf") format("truetype");
    font-weight: normal;
    font-style: normal;
    font-display: swap; }
  
  @font-face {
    font-family: 'Autography';
    src: url("../fonts/Autography/Autography.eot");
    src: url("../fonts/Autography/Autography.eot?#iefix") format("embedded-opentype"), url("../fonts/Autography/Autography.woff") format("woff"), url("../fonts/Autography/Autography.ttf") format("truetype");
    font-weight: normal;
    font-style: normal;
    font-display: swap; }
  
  @font-face {
    font-family: 'Samantha';
    src: url("../fonts/Samantha/Samantha-Regular.eot");
    src: local("Samantha Regular"), local("Samantha-Regular"), url("../fonts/Samantha/Samantha-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Samantha/Samantha-Regular.woff") format("woff"), url("../fonts/Samantha/Samantha-Regular.ttf") format("truetype");
    font-weight: normal;
    font-style: normal;
    font-display: swap; }
  
  @font-face {
    font-family: 'Segoe UI';
    src: url("../fonts/SegoeUI/SegoeUI-Light.eot");
    src: local("Segoe UI Light"), local("SegoeUI-Light"), url("../fonts/SegoeUI/SegoeUI-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/SegoeUI/SegoeUI-Light.woff") format("woff"), url("../fonts/SegoeUI/SegoeUI-Light.ttf") format("truetype");
    font-weight: 300;
    font-style: normal; }
  
  @font-face {
    font-family: 'Segoe UI';
    src: url("../fonts/SegoeUI/SegoeUI-BoldItalic.eot");
    src: local("Segoe UI Bold Italic"), local("SegoeUI-BoldItalic"), url("../fonts/SegoeUI/SegoeUI-BoldItalic.eot?#iefix") format("embedded-opentype"), url("../fonts/SegoeUI/SegoeUI-BoldItalic.woff") format("woff"), url("../fonts/SegoeUI/SegoeUI-BoldItalic.ttf") format("truetype");
    font-weight: bold;
    font-style: italic; }
  
  @font-face {
    font-family: 'Segoe UI';
    src: url("../fonts/SegoeUI/SegoeUI-SemiBold.eot");
    src: local("Segoe UI Semibold"), local("SegoeUI-SemiBold"), url("../fonts/SegoeUI/SegoeUI-SemiBold.eot?#iefix") format("embedded-opentype"), url("../fonts/SegoeUI/SegoeUI-SemiBold.woff") format("woff"), url("../fonts/SegoeUI/SegoeUI-SemiBold.ttf") format("truetype");
    font-weight: 600;
    font-style: normal; }
  
  @font-face {
    font-family: 'Segoe UI';
    src: url("{{ 'SegoeUI.eot' | asset_url }}");
    src: local("Segoe UI"), local("SegoeUI"), url("{{ 'SegoeUI.eot' | asset_url }}?#iefix") format("embedded-opentype"), url("{{ 'SegoeUI.woff' | asset_url }}") format("woff"), url("{{ 'SegoeUI.ttf' | asset_url }}") format("truetype");
    font-weight: normal;
    font-style: normal; }
  
  @font-face {
    font-family: 'Segoe UI';
    src: url("../fonts/SegoeUI/SegoeUI-Bold.eot");
    src: local("Segoe UI Bold"), local("SegoeUI-Bold"), url("../fonts/SegoeUI/SegoeUI-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/SegoeUI/SegoeUI-Bold.woff") format("woff"), url("../fonts/SegoeUI/SegoeUI-Bold.ttf") format("truetype");
    font-weight: bold;
    font-style: normal; }
  
  @font-face {
    font-family: 'Segoe UI';
    src: url("../fonts/SegoeUI/SegoeUI-Italic.eot");
    src: local("Segoe UI Italic"), local("SegoeUI-Italic"), url("../fonts/SegoeUI/SegoeUI-Italic.eot?#iefix") format("embedded-opentype"), url("../fonts/SegoeUI/SegoeUI-Italic.woff") format("woff"), url("../fonts/SegoeUI/SegoeUI-Italic.ttf") format("truetype");
    font-weight: normal;
    font-style: italic; }
  
  @font-face {
    font-family: 'icoFont';
    src: url("{{ 'icoFont.eot' | asset_url }}");
    src: url("{{ 'icoFont.eot' | asset_url }}?uayl2p#iefix") format("embedded-opentype"), url("{{ 'icoFont.ttf' | asset_url }}?uayl2p") format("truetype"), url("{{ 'icoFont.woff' | asset_url }}?uayl2p") format("woff"), url("{{ 'icoFont.svg' | asset_url }}?uayl2p#icoFont") format("svg");
    font-weight: normal;
    font-style: normal;
    font-display: block; }
    </style>

    {% include 'google-tag-manager'%}

    <!-- anti-flicker snippet (recommended)  -->
    <style>.async-hide { opacity: 0 !important} </style>
    <script>
        (function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
        h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
        (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
        })(window,document.documentElement,'async-hide','dataLayer',4000,
        {'GTM-TR9676S':true});
    </script>

{{content_for_header}}
  <script src="https://cdn-widgetsrepository.yotpo.com/v1/loader/oMYBvmnASlHzmouicgkepg" async></script>

  <script src="{{ 'aio-support-pack.js' | asset_url }}" defer></script>
  <script type="module" src="https://cdn.jsdelivr.net/npm/@slightlyoff/lite-vimeo@0.1.1/lite-vimeo.js"></script> 

  {% render 'shogun-head' %}
</head>
<body>
  <main role="main">
    {{ content_for_layout }}
  </main>
  
  <script>
    jQuery(document).on("click", ".cta-btn-90-caps", function () {
      console.log("add to cart event");
          window.dataLayer  = window.dataLayer || [];
          window.dataLayer.push({
            'event': 'eec.addToCart',       // name of an event. In this case, always stays as eec.addToCart
            'ecommerce': {                  // ecommerce object. This is the essential part of tracking. New EE data must always be pushed to this object
              'currencyCode': '{{shop.currency}}',          // the currency which is currently used by a visitor
              'add': {                        // name of an action. In this case, always stays as add
              'actionField': {           
              'list': 'main'          // optional. name of a list from which the product was added to a cart  
            },       
            'products': [{              // list of products added to a cart. Can contain multiple products at the same time
              'name': 'CuraLin 90 Cap Bottle',      // name of a product that was added to a cart
              'id': '7323795652759',       // id of a product
              'price': '39.00',      // price of a product
              'category': 'Simple',
              'variant': '',   // category of a product
              'quantity': 1
            }]
          } 
                                },
                                'userId': '{{ customer.id }}',
                                'email': '{{ customer.email }}',
                                'country': '{{customer.customer_address.country_code }}',
                                'city': '{{customer.customer_address.city }}',
                                'name': '{{ customer.first_name }}',
                                'surname': '{{ customer.last_name }}',
                                'phone_number': '{{customer.phone }}',
                                'state': '{{customer.customer_address.province }}',       //state or province
                                'zip': '{{customer.customer_address.zip }}'         //ZIP or Postal code
                                });
        });

        jQuery(document).on("click", ".cta-btn-180-caps", function () {
      console.log("add to cart event");
          window.dataLayer  = window.dataLayer || [];
          window.dataLayer.push({
            'event': 'eec.addToCart',       // name of an event. In this case, always stays as eec.addToCart
            'ecommerce': {                  // ecommerce object. This is the essential part of tracking. New EE data must always be pushed to this object
              'currencyCode': '{{shop.currency}}',          // the currency which is currently used by a visitor
              'add': {                        // name of an action. In this case, always stays as add
              'actionField': {           
              'list': 'main'          // optional. name of a list from which the product was added to a cart  
            },       
            'products': [{              // list of products added to a cart. Can contain multiple products at the same time
              'name': 'CuraLin 180 Cap Bottle',      // name of a product that was added to a cart
              'id': '7323929772183',       // id of a product
              'price': '69.00',      // price of a product
              'category': 'Simple',
              'variant': '',   // category of a product
              'quantity': 1
            }]
          } 
                                },
                                'userId': '{{ customer.id }}',
                                'email': '{{ customer.email }}',
                                'country': '{{customer.customer_address.country_code }}',
                                'city': '{{customer.customer_address.city }}',
                                'name': '{{ customer.first_name }}',
                                'surname': '{{ customer.last_name }}',
                                'phone_number': '{{customer.phone }}',
                                'state': '{{customer.customer_address.province }}',       //state or province
                                'zip': '{{customer.customer_address.zip }}'         //ZIP or Postal code
                                });
        });

        jQuery(document).on("click", ".cta-btn-3-pack", function () {
      console.log("add to cart event");
          window.dataLayer  = window.dataLayer || [];
          window.dataLayer.push({
            'event': 'eec.addToCart',       // name of an event. In this case, always stays as eec.addToCart
            'ecommerce': {                  // ecommerce object. This is the essential part of tracking. New EE data must always be pushed to this object
              'currencyCode': '{{shop.currency}}',          // the currency which is currently used by a visitor
              'add': {                        // name of an action. In this case, always stays as add
              'actionField': {           
              'list': 'main'          // optional. name of a list from which the product was added to a cart  
            },       
            'products': [{              // list of products added to a cart. Can contain multiple products at the same time
              'name': 'CuraLin 3 Bottles Pack',      // name of a product that was added to a cart
              'id': '7323933999255',       // id of a product
              'price': '186.00',      // price of a product
              'category': 'Simple',
              'variant': '',   // category of a product
              'quantity': 1
            }]
          } 
                                },
                                'userId': '{{ customer.id }}',
                                'email': '{{ customer.email }}',
                                'country': '{{customer.customer_address.country_code }}',
                                'city': '{{customer.customer_address.city }}',
                                'name': '{{ customer.first_name }}',
                                'surname': '{{ customer.last_name }}',
                                'phone_number': '{{customer.phone }}',
                                'state': '{{customer.customer_address.province }}',       //state or province
                                'zip': '{{customer.customer_address.zip }}'         //ZIP or Postal code
                                });
        });
</script>

<!-- Start of Woopra Code -->
<script>
  !function(){var t,o,c,e=window,n=document,r=arguments,a="script",i=["call","cancelAction","config","identify","push","track","trackClick","trackForm","update","visit"],s=function(){var t,o=this,c=function(t){o[t]=function(){return o._e.push([t].concat(Array.prototype.slice.call(arguments,0))),o}};for(o._e=[],t=0;t<i.length;t++)c(i[t])};for(e.__woo=e.__woo||{},t=0;t<r.length;t++)e.__woo[r[t]]=e[r[t]]=e[r[t]]||new s;(o=n.createElement(a)).async=1,o.src="https://static.woopra.com/js/w.js",(c=n.getElementsByTagName(a)[0]).parentNode.insertBefore(o,c)}("woopra");

  woopra.config({
    domain: "curalife.com",
    outgoing_tracking: true,
    download_tracking: true,
    click_tracking: true
  });

  {%- if customer -%}
  woopra.identify({
    id: {{ customer.id | json }},
    name: {{ customer.name | json }},
    email: {{ customer.email | json }},              
    order_count: {{ customer.orders_count | json }},
    total_spent: {{ customer.total_spent | json }}
  });
  {%- endif -%}

  woopra.track();
   
  document.addEventListener('submit', function(e) {
    const form = e.target;
    const formData = new FormData(form);
    const entries = formData.entries();
    const data = Object.fromEntries(entries);
    
    for (var key in data) {
      var fieldEl = form.querySelector(`[name="${key}"]`);
      if (fieldEl.type === 'password') {
        delete data[key];
      }
    }
    
  });
</script>
<!-- End of Woopra Code -->

<style>
  #wisepops-root {
    transition: opacity 0.5s;
  }
</style>

</body>
</html>